@page "/add-student"

@using BlazorServerAppCRUD.Models;
@using BlazorServerAppCRUD.Services;

@inject IStudentServices StudentServices
@inject NavigationManager NavigationManager

<PageTitle>Add New Student</PageTitle>

<h1>Add New Student</h1>

<EditForm Model="@student" OnValidSubmit="SaveUser">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="FirstName" class="form-label">First Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="student.FirstName" />
        </div>
        <ValidationMessage For="@(() => student.FirstName)" />
    </div>
    <div class="mb-3">
        <label for="LastName" class="form-label">Last Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="student.LastName" />
        </div>
        <ValidationMessage For="@(() => student.LastName)" />
    </div>
    <div class="mb-3">
        <label for="EmailAddress" class="form-label">Email Address</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="student.EmailAddress" />
        </div>
        <ValidationMessage For="@(() => student.EmailAddress)" />
    </div>
    <div class="mb-3">
        <label for="Gender" class="form-label">Gender</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="student.Gender" />
        </div>
        <ValidationMessage For="@(() => student.Gender)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>

</EditForm>




@code {
    protected StudentEntity student = new();

    protected async Task SaveUser()
    {

        if (student.FirstName is null)
        {
            return;
        }

        await StudentServices.AddNewStudent(student);
        NavigationManager.NavigateTo("/student-list");
    }

    protected void Cancel()
    {

    }
}
