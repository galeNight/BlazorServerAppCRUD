@page "/UpdateUser/{Id:int}"
@using BlazorServerAppCRUD.Models;
@using BlazorServerAppCRUD.Services;
@inject IUserServices UserServies
@inject NavigationManager NavigationManger

<PageTitle>Update User</PageTitle>

<h1>Update User</h1>

<EditForm Model="@User" OnValidSubmit="UpDateUser">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label for="FirstName" class="form-label">First Name</label>
        <div class="col-md-4">
            <InputText class="form-control"@bind-Value="User.FirstName"/>
        </div>
        <ValidationMessage For="@(()=>User.FirstName)"/>
    </div>
    <div class="mb-3">
        <label for="LastName" class="form-label">Last Name</label>
        <div class="col-md-4">
            <InputText class="form-control"@bind-Value="User.LastName"/>
        </div>
        <ValidationMessage For="@(()=>User.LastName)"/>
    </div>
    <div class="mb-3">
        <label for="Email" class="form-label">Email address</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="User.Email"/>
        </div>
        <ValidationMessage For="@(()=>User.Email)"/>
    </div>
    <div class="mb-3">
        <label for="Login" class="form-label">Login</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="User.Login"/>
        </div>
        <ValidationMessage For="@(()=>User.Login)"/>
    </div>
    <div class="mb-3">
        <label for="Password" class="form-label">Password</label>
        <div class="col-md-4">
            <InputText class="form-label" @bind-Value="User.Password"/>
        </div>
        <ValidationMessage For="@(()=>User.Password)"/>
    </div>
    <div class=" mb-3">
        <label for="Password2" class="form-label">Password2</label>
        <div class="col-md-4">
            <InputText class="form-label" @bind-Value=User.Password2/>
        </div>
        <ValidationMessage For="@(()=> User.Password2)"/> 
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code{
    [Parameter]
    public int Id { get; set; }
    private bool ReadOnly = true;
    protected UserEntity User = new();
    protected override void OnInitialized()
    {
        var UserList = UserServies.GetAllUsers();
        User = UserList.Where(x => x.Id == Id).FirstOrDefault();
    }
    protected void UpDateUser()
    {
        if(User.Id < 1)
        {
            return;
        }
        UserServies.UpdateUser(User);
        NavigationManger.NavigateTo("/UserList");
    }
    protected void Cancel()
    {
        NavigationManger.NavigateTo("/");
    }
}